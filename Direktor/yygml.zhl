"!C705(????????)00000000C705(????????)00000000E8????????E8????????E8????????6A01E8????????83C404B9????????E8????????C605????????00C3":
ID3D11Device* g_pd3dDevice;
ID3D11DeviceContext* g_pd3dContext;
"568B7424??B8FFFFFF00":
cleanup void FREE_RValue__Pre(RValue* param_1);
// ?Signature length: 10
// !Error: Function name contains invalid characters: dec
".8B4424??C70000000000":
cleanup void InitLLVM();
// ?Signature length: 10
".518B4424":
cleanup bool BOOL_RValue(RValue* _pValue);
// ?Signature length: 4
".53":
cleanup void COPY_RValue(RValue* _pDest, RValue* _pSource);
// ?Signature length: 1
".83EC10":
cleanup CInstance * Code_CreateStatic();
// ?Signature length: 3
".53":
cleanup bool Code_Execute(CInstance * self, CInstance * other, CCode * func, RValue* args, int flags);
// ?Signature length: 1
".53":
cleanup bool Code_Execute_Special(CInstance * param_1, CInstance * param_2, CCode * param_3, RValue* param_4, int param_5);
// ?Signature length: 1
".803D????????0057":
cleanup bool ExecuteIt(CInstance * selfinst, CInstance * otherinst, CCode * code, RValue* res, int flags);
// ?Signature length: 8
".83EC10":
cleanup bool GET_RValue(RValue* _pRet, RValue* _pV, YYObjectBase * _pPropSelf, int _index, bool fPrepareArray, bool fPartOfSet);
// ?Signature length: 3
".8B4C24":
cleanup char * GET_STRING_RValue(RValue* param_1);
// ?Signature length: 3
".8B4C24":
cleanup int HASH_RValue(RValue* _pValue);
// ?Signature length: 3
".83EC14":
cleanup int INT32_RValue(RValue* param_1);
// ?Signature length: 3
".83EC18":
cleanup int64 INT64_RValue(RValue* _pValue);
// ?Signature length: 3
".8B5424":
cleanup char * KIND_NAME_RValue(const RValue* _pV);
// ?Signature length: 3
".8B5424":
cleanup void * PTR_RValue(RValue* _pValue);
// ?Signature length: 3
".558BEC":
cleanup void SET_RValue(RValue* _pDest, RValue* _pV, YYObjectBase * _pPropSelf, int _index);
// ?Signature length: 3
".6A0068B1060000":
cleanup void * YYAlloc(int _size);
// ?Signature length: 7
".53568B7424":
cleanup bool YYGetBool(RValue* _pBase, int _index);
// ?Signature length: 5
".83EC14":
cleanup float YYGetFloat(RValue* _pBase, int _index);
// ?Signature length: 3
".83EC10":
cleanup int32_t YYGetInt32(RValue* _pBase, int _index);
// ?Signature length: 3
".83EC10":
cleanup int64 YYGetInt64(RValue* _pBase, int _index);
// ?Signature length: 3
".568B7424":
cleanup void * YYGetPtr(RValue* _pBase, int _index);
// ?Signature length: 4
".56":
cleanup intptr_t YYGetPtrOrInt(RValue* _pBase, int _index);
// ?Signature length: 1
".83EC10":
cleanup double YYGetReal(RValue* _pBase, int _index);
// ?Signature length: 3
".5156":
cleanup char * YYGetString(RValue* _pBase, int _index);
// ?Signature length: 2
".83EC10":
cleanup uint32_t YYGetUint32(RValue* _pBase, int _index);
// ?Signature length: 3
".6A00":
cleanup void * YYRealloc(void * pOriginal, int _newSize);
// ?Signature length: 2
".558BEC":
cleanup uchar * DoSub(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".55":
cleanup uchar * DoMul(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 1
".558BEC":
cleanup uchar * DoDiv(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558BEC":
cleanup uchar * DoRem(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558BEC6AFF":
cleanup uchar * DoConv(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 5
".558BEC":
cleanup uchar * DoAnd(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558BEC":
cleanup uchar * DoOr(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558BEC":
cleanup uchar * DoXor(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558BEC83EC58":
cleanup uchar * DoShl(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 6
".558BEC":
cleanup uchar * DoShr(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".558DAC24":
cleanup uchar * DoPop(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 4
".558BEC":
cleanup uchar * DoCall(uint ret, uchar * param_2, uchar * ccode_index, VMExec * param_4);
// ?Signature length: 3
".558BEC":
cleanup uchar * DoDup(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".83EC0C":
cleanup uchar * DoPushEnv(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 3
".55":
cleanup uchar * DoPopEnv(uint param_1, uchar * param_2, uchar * param_3, VMExec * param_4);
// ?Signature length: 1
// !Error: Function name contains invalid characters: Free
".A1????????85C0":
cleanup void ClearHandledContainer();
// ?Signature length: 7
".83EC08":
cleanup void ConvertStackEntryStringToDouble(uchar * * param_1, double * param_2, uchar * param_3, uchar * param_4, uchar param_5, VMExec * param_6, char * param_7);
// ?Signature length: 3
".558BEC":
cleanup uchar * DoBreak(uint param_1, uchar param_2, uchar * param_3, uchar * param_4, VMExec * param_5, bool param_6);
// ?Signature length: 3
".83EC1C":
cleanup uchar * DoCallScript(CScript * param_1, int param_2, uchar * param_3, VMExec * param_4, YYObjectBase * param_5, YYObjectBase * param_6);
// ?Signature length: 3
".83EC14":
cleanup void DoGenerationalGC(int param_1);
// ?Signature length: 3
".558BEC":
static cleanup void VM::ExecDebug(VMExec * param_1, RValue* param_2, bool param_3);
// ?Signature length: 3
".558DAC24":
cleanup void debug_get_callstack(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B5424":
static cleanup CInstance * CInstance::Find(int param_1);
// ?Signature length: 3
".5355":
static cleanup void VM::GetAllInstanceIDs(Buffer_Standard * param_1, bool param_2);
// ?Signature length: 2
".5153":
static cleanup void VM::GetGlobalVariables(Buffer_Standard * param_1, bool param_2);
// ?Signature length: 2
".83EC08":
static cleanup void VM::GetLocalVariables(Buffer_Standard * param_1, YYObjectBase * param_2, bool param_3, int param_4);
// ?Signature length: 3
// !Error: Function name contains invalid characters: GetNthElement
".83EC18":
static cleanup void VM::GetObjectBaseVariables(Buffer_Standard * param_1, YYObjectBase * param_2, bool param_3);
// ?Signature length: 3
".83EC18":
static cleanup void VM::GetRuntimeState(Buffer_Standard * param_1, int param_2);
// ?Signature length: 3
".53":
static cleanup void VM::GetRuntimeStateRealtime(Buffer_Standard * param_1, int param_2);
// ?Signature length: 1
".83EC10":
static cleanup void VM::GetStructureCounts(Buffer_Standard * param_1);
// ?Signature length: 3
".8B5424":
static cleanup void CInstance::HandleInstance(CInstance * param_1);
// ?Signature length: 3
// !Error: Function name contains invalid characters: Init
".8B4424??53":
static cleanup bool CInstance::InstanceHandled(CInstance * toHandle);
// ?Signature length: 5
".8B4424":
cleanup int KIND_RValue(RValue* _pValue);
// ?Signature length: 3
".81EC9C000000":
cleanup void MarkAndSweepGen(int param_1, int param_2, bool param_3);
// ?Signature length: 6
".A1":
cleanup CObjectGM * Object_Data(int hash);
// ?Signature length: 1
".51FF05":
cleanup uchar * PerformReturn(uchar * param_1, VMExec * param_2);
// ?Signature length: 3
".A1????????B9000000002B4424":
cleanup void PopContextStack(int param_1);
// ?Signature length: 13
".83EC10":
cleanup void ProcessObjectDisposeList();
// ?Signature length: 3
".A1????????8B15":
cleanup void ResetGCRefs();
// ?Signature length: 7
".81EC04040000":
cleanup void VMError(VMExec * param_1, char * param_2);
// ?Signature length: 6
".8B4424":
void IBuffer::Write(IBuffer * this, int param_2);
// ?Signature length: 3
".558BEC":
static cleanup void VM::WriteCallStack(Buffer_Standard * param_1, VMExec * param_2, bool param_3);
// ?Signature length: 3
".55":
static cleanup void VM::WriteInstanceBuiltInVariables(Buffer_Standard * param_1, CInstance * param_2);
// ?Signature length: 1
".538B5C24":
static cleanup void VM::WriteRValueToBuffer(RValue* param_1, Buffer_Standard * param_2);
// ?Signature length: 4
".558BEC6AFF68????????64A1????????5051":
cleanup void YYCreateString(RValue* param_1, char * param_2);
// ?Signature length: 18
".81EC04040000":
cleanup void __YYError_Org(char * fmt);
// ?Signature length: 6
".568B7424":
cleanup void YYGML_DeleteWithIterator(SWithIterator * param_1, YYObjectBase * * param_2, YYObjectBase * * param_3);
// ?Signature length: 4
".578B7C24??81FFA0860100":
cleanup CInstance * YYGML_GetStaticObject(int param_1);
// ?Signature length: 11
".A1????????8B5424":
cleanup int YYGML_NewWithIteratorEx(SWithIterator * param_1, YYObjectBase * * param_2, YYObjectBase * * param_3, int param_4);
// ?Signature length: 8
".8B4424??32D2":
cleanup bool YYGML_WithIteratorNext(SWithIterator * param_1, YYObjectBase * * param_2, YYObjectBase * * param_3);
// ?Signature length: 6
".558BEC6AFF68????????64A1????????5051":
cleanup void YYSetString(byte param_1, char * param_2);
// ?Signature length: 18
".535768":
cleanup char * YYStrDup(char * param_1);
// ?Signature length: 3
".81EC04040000":
cleanup void __DebugConsoleOutput(char * fmt);
// ?Signature length: 6
".FF7424??6A00":
cleanup void YYstrnlen();
// ?Signature length: 6
".8B4424??57":
cleanup uchar * boxType(RValue* param_1, eVM_Type param_2, uchar * param_3);
// ?Signature length: 5
".568B7424??6A00":
cleanup void alarm_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".6A01":
cleanup void alarm_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void date_compare_date(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void date_compare_datetime(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void date_compare_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC28":
cleanup void date_create_datetime(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void date_current_datetime(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void date_date_of(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".81EC14040000":
cleanup void date_date_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC14040000":
cleanup void date_datetime_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".83EC10":
cleanup void date_day_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC48":
cleanup void date_days_in_month(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_days_in_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_day(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_day_of_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_hour(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_hour_of_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_minute(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_minute_of_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_month(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_second(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_second_of_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void date_get_timezone(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_week(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_weekday(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_get_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_hour_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_day(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_hour(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_minute(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_month(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_second(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_week(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_inc_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC34":
cleanup void date_is_today(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void date_leap_year(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_minute_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_month_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_second_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void date_set_timezone(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_time_of(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC44":
cleanup void date_valid_datetime(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_week_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void date_year_span(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5357":
cleanup void debug_event(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void event_perform_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void event_perform(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void event_perform_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void event_user(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".837C24??02":
cleanup void extension_get_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC64":
cleanup void external_define(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void external_free(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".C605????????01":
cleanup void gc_collect(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".6A00":
cleanup void gc_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC28":
cleanup void gc_get_stats(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void gc_get_target_frame_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gc_is_enabled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void gc_target_frame_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void game_get_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC086A00":
cleanup void game_set_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".558D6C24":
cleanup void gif_add_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void gif_open(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void gif_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void gif_save_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".81EC10040000":
cleanup void show_debug_message(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".6A00":
cleanup void show_debug_overlay(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC10":
cleanup void variable_global_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5356":
cleanup void variable_global_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void variable_global_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC34":
cleanup void variable_struct_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void variable_struct_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24??83EC34":
cleanup void variable_struct_get_names(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".8B4C24":
cleanup void variable_struct_remove(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void variable_struct_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void variable_struct_set_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void variable_struct_set_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568BF1F786????????00000800":
void CInstance::Activate(CInstance * this);
// ?Signature length: 13
".578B3D":
cleanup void AddGlobalObject(YYObjectBase * param_1);
// ?Signature length: 3
".8B5424":
cleanup RValue* JUMP_TO_RET(RValue* Args);
// ?Signature length: 3
".568BF1F786????????00000800":
void CInstance::Deactivate(CInstance * this);
// ?Signature length: 13
".53":
bool List::Delete(List * this, CInstance * toDelete);
// ?Signature length: 1
".51":
cleanup void DeterminePotentialRoot(YYObjectBase * _pContainer, YYObjectBase * _pObj);
// ?Signature length: 1
".5156":
float CInstance::GetImageIndex(CInstance * this);
// ?Signature length: 2
".51":
float CInstance::GetImageNumber(CInstance * this);
// ?Signature length: 1
".53":
CInstance * iterator::GetNext_FIRST_entry(iterator * this);
// ?Signature length: 1
".A1????????BA10000000":
cleanup void GLOBAL_RVALUE_HEAPSIZE();
// ?Signature length: 10
".8B4424":
int CInstance::GetTimer(CInstance * this, int param_2);
// ?Signature length: 3
// !Error: Function name contains invalid characters: Insert
".558BEC6AFF68????????64A1????????505156A1":
RValue* YYObjectBase::InternalReadYYVar(YYObjectBase * this, int index);
// ?Signature length: 20
".8B0D????????85C9":
cleanup void LOCK_RVALUE_MUTEX();
// ?Signature length: 8
".538A5C24":
void CInstance::SetDeactivated(CInstance * this, bool param_1);
// ?Signature length: 4
".8B0D":
cleanup void UNLOCK_RVALUE_MUTEX();
// ?Signature length: 2
".558BEC6AFF68????????64A1????????5081EC14040000":
cleanup void * Alloc(uint len, char * srcFile, int lineNr, bool unk);
// ?Signature length: 23
".558BEC53":
void YYStrBuilderYY::growBuffer(YYStrBuilderYY * this, int param_1);
// ?Signature length: 4
".55":
cleanup void memLogEvent();
// ?Signature length: 1
".C20000":
cleanup void memLogPopContext();
// ?Signature length: 3
".C20000":
cleanup void memLogPushContext(char * context);
// ?Signature length: 3
".53558B2D":
cleanup void Variable_BuiltIn_Find();
// ?Signature length: 4
".8B4424??53":
cleanup bool Variable_GetValue_Direct(YYObjectBase * param_1, int param_2, int param_3, byte param_4, bool param_5, bool param_6);
// ?Signature length: 5
".A1????????8B5424":
cleanup bool Variable_GetValue_OBJTYPE(int param_1, int param_2, int param_3, byte param_4, bool param_5, bool param_6);
// ?Signature length: 8
".568B7424??57":
cleanup bool Variable_SetValue_Direct(YYObjectBase * param_1, int param_2, int param_3, byte param_4);
// ?Signature length: 6
".518B5424":
cleanup CInstance * YYGML_FindInstance(int param_1);
// ?Signature length: 4
".83EC08":
cleanup bool YYGML_Variable_GetValue(int param_1, int param_2, int param_3, byte param_4, bool param_5, bool param_6);
// ?Signature length: 3
".A1":
cleanup bool YYGML_Variable_GetValue_OBJTYPE(int param_1, int param_2, int param_3, byte param_4, bool param_5, bool param_6);
// ?Signature length: 1
".538B5C24":
cleanup bool YYGML_Variable_SetValue(int param_1, int param_2, int param_3, byte param_4);
// ?Signature length: 4
".83EC1456":
cleanup void collision_circle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void collision_circle_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void collision_ellipse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void collision_ellipse_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC18":
cleanup void collision_line(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void collision_line_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void collision_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".558BEC":
cleanup void collision_point_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void collision_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".558BEC":
cleanup void collision_rectangle_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void distance_to_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void distance_to_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC2C":
cleanup void game_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void game_load_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".E9":
cleanup void game_restart(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void game_save_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void instance_activate_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void instance_activate_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void instance_activate_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void instance_change(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void instance_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void instance_create_depth(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void instance_create_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void instance_deactivate_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC24":
cleanup void instance_deactivate_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void instance_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void instance_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC24":
cleanup void instance_find(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void instance_furthest(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void instance_nearest(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void instance_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void instance_place(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void instance_place_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void instance_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void instance_position_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void motion_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void motion_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void move_bounce_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A006A00":
cleanup void move_bounce_solid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A016A01":
cleanup void move_contact_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A006A01":
cleanup void move_contact_solid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A016A01":
cleanup void move_outside_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A006A01":
cleanup void move_outside_solid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void move_random(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void move_snap(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void move_towards_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424??6A02":
cleanup void mp_grid_add_cell(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC28":
cleanup void mp_grid_add_instances(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void mp_grid_add_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void mp_grid_clear_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void mp_grid_clear_cell(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void mp_grid_clear_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void mp_grid_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void mp_grid_draw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void mp_grid_get_cell(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5357":
cleanup void mp_grid_path(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void mp_grid_to_ds_grid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5357":
cleanup void mp_linear_path(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424??57":
cleanup void mp_linear_step(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".568B7424":
cleanup void mp_linear_step_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5357":
cleanup void mp_potential_path(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5357":
cleanup void mp_potential_path_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void mp_potential_settings(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void mp_potential_step(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void mp_potential_step_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4C24":
cleanup void path_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void path_start(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??03":
cleanup void place_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".57":
cleanup void place_free(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void place_meeting(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void place_snapped(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC14":
cleanup void point_in_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC1C":
cleanup void point_in_triangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void position_change(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void position_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".57":
cleanup void position_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC1C":
cleanup void position_meeting(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC18":
cleanup void rectangle_in_circle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC1C":
cleanup void rectangle_in_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".FF35":
cleanup void room_goto(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".FF35":
cleanup void room_goto_next(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".FF35":
cleanup void room_goto_previous(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void room_next(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void room_previous(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".FF35":
cleanup void room_restart(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void scheduler_resolution_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void scheduler_resolution_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void transition_define(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void transition_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC04040000":
cleanup void directory_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC04040000":
cleanup void directory_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC04040000A1????????33C4898424????????8B8424????????56":
cleanup void file_attributes(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 28
".81EC08040000":
cleanup void file_bin_open(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".6A00FF7424":
cleanup void file_bin_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void file_bin_read_byte(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void file_bin_rewrite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".57":
cleanup void file_bin_seek(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void file_bin_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void file_bin_write_byte(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".B810180000":
cleanup void file_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".81EC04080000":
cleanup void file_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".56":
cleanup void file_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".803D????????01":
cleanup void file_find_close(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".81EC0C080000":
cleanup void file_find_first(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B5424":
cleanup void file_find_next(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".B804100000":
cleanup void file_rename(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".57":
cleanup void file_text_close(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void file_text_eof(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void file_text_eoln(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".81EC08040000":
cleanup void file_text_open_append(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC04040000":
cleanup void file_text_open_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".51":
cleanup void file_text_readln(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void file_text_read_real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void file_text_read_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void file_text_open_from_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void file_text_writeln(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".81EC0C040000":
cleanup void file_text_write_real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".57":
cleanup void file_text_write_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".518B4424":
cleanup void filename_change_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".81EC04040000":
cleanup void filename_dir(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".576A00FF7424??E8????????8B7C24??83C408C747??01000000C7070000000085C074??5650E8????????8BF05657E8????????56E8????????83C4105E5FC381EC04040000":
cleanup void filename_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 70
".53":
cleanup void http_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".81EC04040000":
cleanup void http_get_file(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B4424":
cleanup void http_get_request_crossorigin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void http_post_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC0C":
cleanup void http_request(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B0D":
cleanup void ini_close(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".576A00":
cleanup void ini_key_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".576A00":
cleanup void ini_key_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void ini_open(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void ini_open_from_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void ini_read_real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void ini_read_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void ini_section_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void ini_section_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53568B7424":
cleanup void ini_write_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".5356":
cleanup void json_decode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void json_encode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??00":
cleanup void json_stringify(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4C24":
cleanup void load_csv(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void parameter_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".566A00":
cleanup void parameter_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC04080000":
cleanup void zip_unzip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".568B7424??8B46":
cleanup void COPY_RValue_do__Post(RValue* param_1, RValue* param_2);
// ?Signature length: 7
".558BEC6AFF68????????64A1????????5083EC28":
cleanup int CreateDsMap(int _num);
// ?Signature length: 20
".53568BF1":
RValue* RValue::GetVariable(RValue* this, RValue* var);
// ?Signature length: 4
".83EC0856":
cleanup void abs(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".51":
cleanup void ansi_char(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void arccos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void arcsin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void arctan2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??05":
cleanup void array_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC14":
cleanup void array_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void array_equals(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void array_get_2D(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void array_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void array_height_2d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC08":
cleanup void array_insert(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void array_length_1d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void array_length_2d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4C24":
cleanup void array_pop(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void array_set_2D(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void array_set_2D_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5355":
cleanup void array_set_2D_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void array_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void __array_set_owner__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void array_set_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void array_set_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".57":
cleanup void array_sort(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void _yy_bool(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void _yy_ceil(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void choose(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC18":
cleanup void clamp(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void cos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void darccos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void darcsin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void darctan2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08568B7424??6A00FF7424??C746??00000000E8????????DC0D":
cleanup void dcos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 28
".83EC08":
cleanup void dsin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void dtan(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void degtorad(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC18":
cleanup void dot_product(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC28":
cleanup void dot_product_3d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void dot_product_3d_normalized(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void dot_product_normalized(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void exp(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void _yy_floor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void frac(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void irandom(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void irandom_range(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424??FF7424":
cleanup void to_int64(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".8B5424":
cleanup void is_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_bool(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void is_infinity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B5424":
cleanup void is_int32(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_int64(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_matrix(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void is_method(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void is_nan(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424??33C98B4424??C742??000000008B40":
cleanup void is_numeric(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 19
".8B5424":
cleanup void is_real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void is_struct(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_undefined(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_vec3(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B5424":
cleanup void is_vec4(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void lengthdir_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void lengthdir_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void lerp(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void ln(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void _yy_log10(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void _yy_log2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void logn(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void angle_difference(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void math_get_epsilon(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void math_set_epsilon(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void _yy_max(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void _yy_mean(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void _yy_median(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC34":
cleanup void _yy_method(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void method_get_self(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void _yy_min(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void _yy_ord(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC0C":
cleanup void point_direction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void point_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void point_distance_3d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void _yy_power(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void _yy_ptr(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void radtodeg(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void _yy_random(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void random_get_seed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void random_range(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void random_set_seed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void randomise(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void _yy_round(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08568B7424??6A00FF7424??C746??00000000E8????????DD5C24":
cleanup void _yy_sqr(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 29
".55":
cleanup void _yy_sqrt(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void _yy_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void string_byte_at(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void string_byte_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC14":
cleanup void string_char_at(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void string_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void string_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC14":
cleanup void string_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC8C010000":
cleanup void string_format(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".558BEC":
cleanup void string_hash_to_newline(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC14":
cleanup void string_insert(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".51":
cleanup void string_last_pos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC0C":
cleanup void string_last_pos_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void string_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void string_letters(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0853":
cleanup void string_lower(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".51":
cleanup void string_ord_at(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5153":
cleanup void string_pos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void string_pos_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5153":
cleanup void string_repeat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void string_replace(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void string_replace_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void string_set_byte_at(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void string_upper(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void typeof(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void weak_ref_alive(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void weak_ref_any_alive(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void weak_ref_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void yyAsm(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B5424??56":
cleanup void utf8_add_char();
// ?Signature length: 5
".56":
cleanup void utf8_extract_char();
// ?Signature length: 1
".8B5424":
cleanup void utf8_strlen();
// ?Signature length: 3
".568B7424??6A00":
cleanup void color_get_blue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void color_get_green(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC18":
cleanup void color_get_hue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void color_get_red(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC18":
cleanup void color_get_saturation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC18":
cleanup void color_get_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void display_get_frequency(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void display_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void display_get_orientation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4C24":
cleanup void display_get_sleep_margin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void display_get_timing_method(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void window_get_visible_rects(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void display_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void display_mouse_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void display_mouse_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void display_mouse_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void display_reset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void display_set_sleep_margin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void display_set_timing_method(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void display_set_ui_visibility(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void draw_arrow(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_button(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_circle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00FF7424":
cleanup void draw_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A01":
cleanup void draw_clear_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void draw_ellipse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_ellipse_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void shader_enable_corner_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_enable_drawevent(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_enable_swf_aa(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void draw_enable_skeleton_blendmodes(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void draw_get_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void draw_get_circle_precision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void draw_get_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void draw_get_font(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void draw_get_halign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56FF7424":
cleanup void draw_getpixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC08":
cleanup void draw_getpixel_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void draw_get_swf_aa_level(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void draw_get_valign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC1C":
cleanup void draw_healthbar(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void draw_line(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_line_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_line_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_line_width_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC0856":
cleanup void draw_path(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void draw_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void draw_point_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6AFF":
cleanup void draw_primitive_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void draw_primitive_begin_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void draw_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_rectangle_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_roundrect(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424??6A06":
cleanup void draw_roundrect_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC0C":
cleanup void draw_roundrect_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void draw_self(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void draw_set_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_set_circle_precision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_set_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_set_font(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void draw_set_halign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void draw_set_swf_aa_level(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void draw_set_valign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void display_set_windows_alternate_sync(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void draw_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void draw_sprite_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void draw_sprite_general(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC088D4424":
cleanup void draw_sprite_part(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".83EC08":
cleanup void draw_sprite_part_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void draw_sprite_pos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void draw_sprite_stretched(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC088D0424":
cleanup void draw_sprite_stretched_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".83EC08":
cleanup void draw_sprite_tiled_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void draw_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_surface_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_surface_general(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56E8????????8B7424":
cleanup void draw_surface_part(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".568B7424":
cleanup void draw_surface_part_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_surface_stretched(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_surface_stretched_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".833D????????00":
cleanup void draw_surface_tiled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".833D????????00":
cleanup void draw_surface_tiled_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".51":
cleanup void draw_text(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void draw_text_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void draw_text_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void draw_text_ext_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5157":
cleanup void draw_text_ext_transformed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void draw_text_ext_transformed_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void draw_text_transformed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5157":
cleanup void draw_text_transformed_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void draw_triangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void draw_triangle_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void draw_vertex(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void draw_vertex_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_vertex_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void draw_vertex_texture_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5153":
cleanup void font_cache_glyph(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".566A00":
cleanup void font_get_uvs(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC88000000":
cleanup void font_get_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".576A00":
cleanup void font_get_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424??578B7C24??6A0256C747??00000000E8????????83C404D91C246A0156E8????????83C408":
cleanup void merge_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 42
".83EC18":
cleanup void screen_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void screen_save_part(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void skeleton_animation_get_event_frames(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void skeleton_animation_get_frame(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void skeleton_animation_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005????????53":
cleanup void skeleton_animation_mix(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".8B4424":
cleanup void skeleton_animation_set_frame(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void skeleton_bone_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void skeleton_animation_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005????????8B4C24":
cleanup void skeleton_attachment_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_attachment_create_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".8B4424":
cleanup void draw_skeleton(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void draw_skeleton_collision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void draw_skeleton_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void draw_skeleton_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void skeleton_find_slot(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24??568B7424??57C746??01000000C70600000000E8????????8BF885FF74??837C24??01":
cleanup void skeleton_animation_get_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 39
".F20F1005????????8B4C24":
cleanup void skeleton_bone_data_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_bone_state_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".558BEC":
cleanup void skeleton_get_bounds(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void skeleton_animation_get_duration(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void skeleton_animation_get_frames(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void skeleton_get_minmax(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4C24":
cleanup void skeleton_get_num_bounds(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void skeleton_skin_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5657":
cleanup void skeleton_animation_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".F20F1005????????8B4C24":
cleanup void skeleton_animation_set_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_attachment_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_bone_data_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_bone_state_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_collision_draw_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????8B4C24":
cleanup void skeleton_skin_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".8B4424":
cleanup void skeleton_skin_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void skeleton_slot_alpha_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void skeleton_slot_color_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005????????8B4C24":
cleanup void skeleton_slot_color_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".F20F1005????????56":
cleanup void skeleton_slot_data(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".F20F1005????????8B4C24":
cleanup void skeleton_slot_data_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".8B4424":
cleanup void skeleton_slot_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void sprite_get_uvs(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC0853":
cleanup void sprite_get_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5657":
cleanup void string_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void string_height_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void string_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void string_width_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void surface_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void surface_copy_part(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void surface_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void surface_create_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void surface_depth_disable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void surface_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void surface_free(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void surface_get_depth_disable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void surface_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56FF7424":
cleanup void surface_getpixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void surface_get_target(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void surface_get_target_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void surface_get_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void surface_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void surface_reset_target(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53568B7424":
cleanup void surface_resize(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void surface_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC0C":
cleanup void surface_save_part(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void surface_set_target(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void surface_set_target_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void texture_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void texture_get_uvs(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void texture_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void texture_global_scale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void texture_preload(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void texture_set_priority(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".566A00":
cleanup void tileset_get_uvs(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".576A00":
cleanup void tileset_get_texture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".E8????????50":
cleanup void window_get_caption(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".568B7424":
cleanup void window_get_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void window_get_cursor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_get_fullscreen(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void window_get_showborder(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void window_get_showicons(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void window_get_sizeable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void window_get_stayontop(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void window_get_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void window_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_mouse_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_mouse_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void window_mouse_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A006A00":
cleanup void window_set_caption(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void window_set_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_cursor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_fullscreen(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_max_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_max_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_min_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void window_set_min_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void window_set_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void window_set_rectangle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
//! Warning: 0 matches were not in a function and will be ignored.
".56":
cleanup void window_view_mouse_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_view_mouse_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_views_mouse_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void window_views_mouse_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC6AFF68????????64A1????????50535657A1????????33C5508D45??64A3????????E8":
cleanup int CreateBuffer(int _size, eBuffer_Format _bf, int _alignment);
// ?Signature length: 38
".833D????????00":
cleanup void buffer_async_group_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".F20F1005":
cleanup void buffer_async_group_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".538B5C24":
cleanup void buffer_async_group_option(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5356578B7C24??6A0057E8????????83C40885C078??3B05????????7D??8B0D????????8D1C85????????8B34??85F674??8B366A02":
cleanup void buffer_base64_encode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 54
".53":
cleanup void buffer_crc32(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void buffer_compress(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void buffer_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC18":
cleanup void buffer_copy_from_vertex_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void buffer_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".51":
cleanup void buffer_create_from_vertex_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424??83EC0C":
cleanup void buffer_create_from_vertex_buffer_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".F20F1005":
cleanup void buffer_decompress(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void buffer_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void buffer_fill(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void buffer_get_address(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".538B5C24":
cleanup void buffer_get_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4C24":
cleanup void buffer_get_alignment(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void buffer_load(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51F20F1005":
cleanup void buffer_load_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".53":
cleanup void buffer_load_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void buffer_load_partial(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void buffer_md5(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5356":
cleanup void buffer_poke(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".538B5C24":
cleanup void buffer_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5356":
cleanup void buffer_resize(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".53":
cleanup void buffer_sha1(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void buffer_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".51F20F1005":
cleanup void buffer_save_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".53":
cleanup void buffer_save_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void buffer_seek(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".538B5C24":
cleanup void buffer_set_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424??6A00":
cleanup void buffer_sizeof(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".F20F1005":
cleanup void buffer_tell(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void buffer_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5356578B7C24":
cleanup void keyboard_check(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".5657":
cleanup void keyboard_check_pressed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void keyboard_check_released(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".81EC0C010000":
cleanup void draw_highscore(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".83EC10":
cleanup void get_integer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void get_integer_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A01":
cleanup void get_login_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC10":
cleanup void get_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void get_string_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A01":
cleanup void highscore_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
//! Warning: 0 matches were not in a function and will be ignored.
".56":
cleanup void highscore_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".E8????????E9":
cleanup void io_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".E8????????6A00":
cleanup void keyboard_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void keyboard_get_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void keyboard_set_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".A1":
cleanup void load_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void mouse_wheel_down(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void mouse_wheel_up(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A016A01":
cleanup void show_error(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC0C":
cleanup void show_message(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void show_message_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void show_question(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void show_question_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00FF7424":
cleanup void splash_set_adapt(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00":
cleanup void splash_set_border(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".A1":
cleanup void splash_set_caption(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void splash_set_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_cursor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_fullscreen(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_interrupt(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_main(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_scale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_stop_key(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_stop_mouse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void splash_set_top(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".558BEC6AFF68????????64A1????????5051":
cleanup void ds_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 18
".55":
cleanup void ds_grid_add_disk(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void ds_grid_add_grid_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".51":
cleanup void ds_grid_add_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void ds_grid_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void ds_grid_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void ds_grid_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void ds_grid_get_max(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void ds_grid_get_mean(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void ds_grid_get_min(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void ds_grid_get_sum(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5355":
cleanup void ds_grid_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_grid_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".5356":
cleanup void ds_grid_multiply(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void ds_grid_multiply_disk(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void ds_grid_multiply_grid_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".51":
cleanup void ds_grid_multiply_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5356":
cleanup void ds_grid_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void ds_grid_resize(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void ds_grid_set_disk(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC10":
cleanup void ds_grid_set_grid_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void ds_grid_set_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void ds_grid_set_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".51":
cleanup void ds_grid_set_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void ds_grid_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00FF7424":
cleanup void ds_grid_shuffle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".5356":
cleanup void ds_grid_sort(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void ds_grid_value_disk_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_grid_value_disk_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_grid_value_disk_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void ds_grid_value_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void ds_grid_value_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5153":
cleanup void ds_grid_value_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_grid_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void ds_grid_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void ds_list_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void ds_list_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void ds_list_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void ds_list_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_list_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_list_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".578B7C24":
cleanup void ds_list_find_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5657":
cleanup void ds_list_find_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void ds_list_insert(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void ds_list_is_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void ds_list_is_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".538B5C24":
cleanup void ds_list_mark_as_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".538B5C24":
cleanup void ds_list_mark_as_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5356":
cleanup void ds_list_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void ds_list_replace(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5657":
cleanup void ds_list_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void ds_list_set_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".53":
cleanup void ds_list_set_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_list_shuffle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".56":
cleanup void ds_list_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void ds_list_sort(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_add_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC6AFF68????????64A1????????5083EC24":
cleanup bool DsMapAddString(int _index, char * _pKey, char * pVal);
// ?Signature length: 20
".55":
cleanup bool DsMapAddDouble(int _index, char * _pKey, double value);
// ?Signature length: 1
".558BEC6AFF68????????64A1????????5051":
cleanup void ds_map_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 18
".55":
cleanup void ds_map_copy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_find_first(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_find_last(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_find_next(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_find_previous(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_find_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_is_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_is_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_keys_to_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_replace(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_replace_list(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_replace_map(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".81EC0C040000":
cleanup void ds_map_secure_load(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B4424??F20F1005":
cleanup void ds_map_secure_load_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".83EC0C":
cleanup void ds_map_secure_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC1C":
cleanup void ds_map_secure_save_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void ds_map_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_set_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_set_pre(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void ds_map_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void ds_map_values_to_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void ds_map_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void ds_priority_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void ds_priority_change_priority(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00FF7424":
cleanup void ds_priority_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void ds_priority_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_priority_delete_max(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_priority_delete_min(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void ds_priority_delete_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void ds_priority_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_priority_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_priority_find_max(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_priority_find_min(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void ds_priority_find_priority(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".5356":
cleanup void ds_priority_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_priority_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void ds_priority_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_queue_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void ds_queue_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_queue_dequeue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".56":
cleanup void ds_queue_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_queue_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".53":
cleanup void ds_queue_enqueue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_queue_head(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".5356":
cleanup void ds_queue_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_queue_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_queue_tail(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void ds_queue_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void ds_set_precision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_stack_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void ds_stack_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void ds_stack_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_stack_pop(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".53":
cleanup void ds_stack_push(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5356":
cleanup void ds_stack_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00FF7424":
cleanup void ds_stack_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void ds_stack_top(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void ds_stack_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4C24":
cleanup CDS_Grid * * GetTheGrids(int * param_1);
// ?Signature length: 3
".8B4C24":
cleanup CDS_Priority * * GetThePriorityQueues(int * param_1);
// ?Signature length: 3
".8B4C24":
cleanup CDS_Queue * * GetTheQueues(int * param_1);
// ?Signature length: 3
".8B4C24":
cleanup CDS_Stack * * GetTheStacks(int * param_1);
// ?Signature length: 3
".83EC20":
cleanup void DsListAddInt64(int _dsList, int64 _value);
// ?Signature length: 3
".55":
cleanup void DsListAddMap(int _dsList, int _mapIndex);
// ?Signature length: 1
".83EC20":
cleanup void DsListClear(int _dsList);
// ?Signature length: 3
".83EC10":
cleanup int DsListCreate();
// ?Signature length: 3
//! ERROR: DsMapAddList signature matched 2 locations, which is too many for a unique signature.
".83EC20":
cleanup void DsMapClear(int _dsMap);
// ?Signature length: 3
".558DAC24":
cleanup void RunnerLoadGame();
// ?Signature length: 4
".F20F1005":
cleanup void shader_current(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void shader_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void shader_get_sampler_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void shader_get_uniform(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void shader_is_compiled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".E8":
cleanup void shader_reset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void shader_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".53":
cleanup void texture_set_stage(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void shader_set_uniform_f(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void shader_set_uniform_f_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void shader_set_uniform_i(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void shader_set_uniform_i_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void shader_set_uniform_matrix_array(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void shaders_are_supported(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void texture_get_texel_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void texture_get_texel_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC0C56":
cleanup void GR_Surface_FreeAll();
// ?Signature length: 4
".518B0D":
cleanup int Code_Variable_FindAlloc_Slot_From_Name(YYObjectBase * obj, char * name);
// ?Signature length: 3
".8B4424":
cleanup char * Code_Variable_Find_Name(char * fn_name, int objind, int varind);
// ?Signature length: 3
".53":
cleanup int Code_Variable_Find_Set(char * name, int scope, int setme);
// ?Signature length: 1
".55":
cleanup void Code_Variable_Init(int num_global, int num_instance, int num_local);
// ?Signature length: 1
// !Error: Function name contains invalid characters: FindCheckKey
".558BEC":
void CRoom::constructor(CRoom * this);
// ?Signature length: 3
".568B7424??578BF956":
void CRoom::DeleteInstance(CRoom * this, CInstance * self, bool removeGlobal);
// ?Signature length: 9
".8B4424??8B0D":
static cleanup void CInstance::Remove(CInstance * param_1);
// ?Signature length: 6
//! ERROR: RemoveSeqInstance signature matched 2 locations, which is too many for a unique signature.
".538BD9":
void CRoom::UpdateActive(CRoom * this);
// ?Signature length: 3
".558BEC":
void CRoom::UpdateLayers(CRoom * this);
// ?Signature length: 3
".83EC30":
cleanup void exception_unhandled_handler(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424??B801000000":
cleanup void __delete__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".C605????????00":
cleanup void __finish_catch__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void __finish_finally__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC10":
cleanup void __ForInIterator__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void __ForInIteratorDelete__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void __ForInIteratorGetNext__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC24":
cleanup void __GetInstance__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void __Global__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void __GlobalScope__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void __instanceof__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void __new__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".538B5C24":
cleanup void __NewArray__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".558BEC":
cleanup void __NewGMLObject__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5556":
cleanup void __NewObject__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void __Null__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void __NullObject__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24??8B4424":
cleanup void __Other__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".A1":
cleanup void __SPRINT(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".576A00":
cleanup void __script_ref__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void __This__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B0D":
cleanup void __throw__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".A1????????53":
cleanup void __try_hook__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B0D":
cleanup void __try_unhook__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B5424":
cleanup void __typeof__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC18":
cleanup void* F_JS_ToInt32(RValue* ret, RValue* toConv);
// ?Signature length: 3
".538B5C24??5556":
cleanup void __NewGMLArray__(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
//! ERROR: JSThrowReferenceError signature matched 2 locations, which is too many for a unique signature.
".83EC30803D????????00":
cleanup void JSThrowTypeError(char * param_1);
// ?Signature length: 10
".558BEC6AFF68????????64A1????????50B84C800000":
cleanup void Error_Show_Action(char * err, bool serious, bool _manualError = false);
// ?Signature length: 22
".66A1????????B900100000":
cleanup void Debug_AddTag(uint32_t type, char * tagName);
// ?Signature length: 11
".A1????????85C0":
cleanup void Debug_WriteErrorMessage();
// ?Signature length: 7
".833D????????00":
cleanup void Debug_WriteOutput();
// ?Signature length: 7
".55":
cleanup void Debug_WriteSurfaceIds();
// ?Signature length: 1
".558BEC6AFF68????????64A1????????5051":
cleanup void TickDebugger();
// ?Signature length: 18
".83EC14":
void SScriptCacheInfo::constructor(SScriptCacheInfo * this, char * param_1);
// ?Signature length: 3
".8B4424":
cleanup char * Arg2String(int param_1);
// ?Signature length: 3
".8B4424":
static cleanup VMDebugInfo * VM::DebugInfo(VMBuffer * param_1, int param_2);
// ?Signature length: 3
".51":
static cleanup char * VM::DebugLine(VMDebugInfo * param_1, char * param_2);
// ?Signature length: 1
".558BEC":
static cleanup int VM::DebugLineNumber(VMDebugInfo * param_1, char * param_2, char * * param_3);
// ?Signature length: 3
".56":
static cleanup void VM::Disasm(char * param_1, VMBuffer * param_2, tagIConsole * param_3);
// ?Signature length: 1
".558BEC":
static cleanup int VM::DisasmOne(char * param_1, uchar * param_2, int param_3, tagIConsole * param_4);
// ?Signature length: 3
// !Error: Function name contains invalid characters: Insert
".B804100000":
void TmpStringBuilder::Output(TmpStringBuilder * this, char * param_1);
// ?Signature length: 5
".8B4424":
static cleanup int RValue::ParamSize(RValueType param_1);
// ?Signature length: 3
".A1????????FF35":
cleanup bool Object_Prepare();
// ?Signature length: 7
".A1????????56":
cleanup void Script_Free();
// ?Signature length: 6
".8B4C24":
cleanup CScript * ScriptFromId(int param_1);
// ?Signature length: 3
".81EC04040000":
cleanup int Script_Find_Id(char * name);
// ?Signature length: 6
".558BEC6AFF68????????64A1????????5083EC28":
cleanup void Script_Prepare();
// ?Signature length: 20
".FF7424??FF35":
cleanup void AddDirectoryToBundleWhitelist(char * _pszFilename);
// ?Signature length: 6
".FF7424??FF35":
cleanup void AddDirectoryToSaveWhitelist(char * _pszFilename);
// ?Signature length: 6
".FF7424??FF35":
cleanup void AddFileToBundleWhitelist(char * _pszFilename);
// ?Signature length: 6
".FF7424??FF35":
cleanup void AddFileToSaveWhitelist(char * _pszFilename);
// ?Signature length: 6
".E9":
cleanup HSPRITEASYNC CreateSpriteAsyncRedirect(int * _pSpriteIndex, int _xOrig, int _yOrig, int _numImages, int _flags);
// ?Signature length: 1
".55":
cleanup void DsMapAddBool(int _index, char * _pKey, bool value);
// ?Signature length: 1
".55":
cleanup void DsMapAddRValue(int _index, char * _pKey, RValue* value);
// ?Signature length: 1
".81EC9C0D0000":
cleanup void Extension_Prepare();
// ?Signature length: 6
".6A01":
cleanup bool DsMapAddInt64(int _index, char * _pKey, int64 value);
// ?Signature length: 2
".8B4424":
cleanup double REAL_RValue(RValue* _pValue);
// ?Signature length: 3
".53":
cleanup void __ReleaseConsoleOutput(char * fmt);
// ?Signature length: 1
".8B4C24":
cleanup void StructAddBool(RValue* _pStruct, char * _pKey, bool _value);
// ?Signature length: 3
".F20F104424":
cleanup void StructAddDouble(RValue* _pStruct, char * _pKey, double _value);
// ?Signature length: 5
".8B4C24":
cleanup void StructAddInt(RValue* _pStruct, char * _pKey, int _value);
// ?Signature length: 3
".8B4C24":
cleanup void StructAddRValue(RValue* _pStruct, char * _pKey, RValue* _pValue);
// ?Signature length: 3
".8B4C24":
cleanup void StructAddEmptyRValue(RValue* _pStruct, char * _pKey, RValue* _pValue);
// ?Signature length: 3
".6A006A0068":
cleanup void StructCreate(RValue* _pStruct);
// ?Signature length: 5
".56":
cleanup bool Base64Encode(void * input_buf, size_t input_len, void * output_buf, size_t output_len);
// ?Signature length: 1
".55":
cleanup bool BufferGetContent(int _index, void * * _ppData, int * _pDataSize);
// ?Signature length: 1
".55":
cleanup int BufferWriteContent(int _index, int _dest_offset, void * _pSrcMem, int _size, bool _grow, bool _wrap);
// ?Signature length: 1
".FF7424??FF7424":
cleanup bool BundleFileName(char * _name, int _size, char * _pszFileName);
// ?Signature length: 7
".55":
cleanup void YYCreateArray(RValue* pRValue, int n_values, double * values);
// ?Signature length: 1
".55":
cleanup void DestroyDsMap(int _index);
// ?Signature length: 1
".568B7424":
cleanup void FREE_RValue(RValue* _pValue);
// ?Signature length: 4
".55":
cleanup HYYMUTEX YYMutexCreate(char * _name);
// ?Signature length: 1
".568B7424":
cleanup void YYMutexDestroy(HYYMUTEX hMutex);
// ?Signature length: 4
"!.8B4C24":
cleanup void YYMutexLock(HYYMUTEX hMutex);
// ?Signature length: 3
"!.8B4C24":
cleanup void YYMutexUnlock(HYYMUTEX hMutex);
// ?Signature length: 3
".FF7424??FF7424":
cleanup bool SaveFileName(char * _name, int _size, char * _pszFileName);
// ?Signature length: 7
".83EC0C":
cleanup void Timing_Sleep(int64 slp, bool precise);
// ?Signature length: 3
".83EC08":
cleanup int64 Timing_Time();
// ?Signature length: 3
".8B4424??8B5424":
static cleanup int HashTable::compare_keys(char * cStr, int length, int unk);
// ?Signature length: 7
".83EC08":
void RenderStateManager::Force(RenderStateManager * this);
// ?Signature length: 3
"!.A1":
cleanup void GR_D3D_End();
// ?Signature length: 1
".558BEC":
cleanup bool GR_D3D_Finish_Frame(bool param_1);
// ?Signature length: 3
".83EC48":
cleanup bool GR_D3D_Init(void * param_1, int param_2, int param_3, int param_4);
// ?Signature length: 3
".E8????????E8":
cleanup bool GR_D3D_Reset();
// ?Signature length: 6
".5657E8":
cleanup void GR_D3D_Set_Region(int param_1, int param_2);
// ?Signature length: 3
".81ECAC000000":
cleanup void GR_D3D_Set_View_Area(float param_1, float param_2, float param_3, float param_4, float param_5);
// ?Signature length: 6
".833D????????000F84":
cleanup void GR_D3D_Settings_Init();
// ?Signature length: 9
".55":
cleanup bool GR_D3D_Start_Frame();
// ?Signature length: 1
".83EC0C":
void RenderStateManager::Reset(RenderStateManager * this);
// ?Signature length: 3
".8BD1":
cleanup void InitGraphics();
// ?Signature length: 2
".6A23":
int RenderStateManager::WriteStatesToBuffer(RenderStateManager *this);
// ?Signature length: 2
".8B5424":
cleanup int calculate_string_hash(char * param_1);
// ?Signature length: 3
".8B4C24":
cleanup byte wide_AreStringsEqualUnrolled(byte * s1, byte * s2);
// ?Signature length: 3
".538B5C24":
cleanup int ASYNCFunc_SpriteAdd(HTTP_REQ_CONTEXT * _pContext, void * _p, int * _pMap);
// ?Signature length: 4
".8B4424":
cleanup void ASYNCFunc_SpriteCleanup(HTTP_REQ_CONTEXT * _pContext);
// ?Signature length: 3
".558BEC6AFF68????????64A1????????5081EC08010000A1????????33C58945??5657508D45??64A3????????A1????????8B7D":
cleanup HSPRITEASYNC CreateSpriteAsync(int * _pSpriteIndex, int _xOrig, int _yOrig, int _numImages, int _flags);
// ?Signature length: 52
".538B5C24??55":
cleanup bool Script_Perform(int ind, CInstance * selfinst, CInstance * otherinst, int argc, RValue* res, RValue* arg);
// ?Signature length: 6
".8B0D????????A1":
cleanup void Function_Add(char * name, TRoutine routine, int argnumb, bool regonly);
// ?Signature length: 7
".53":
cleanup void Function_Replace(char * name, TRoutine routine);
// ?Signature length: 1
".A1????????85C00F84????????53":
cleanup void EndRoom(bool ending);
// ?Signature length: 14
".558BEC6AFF68????????64A1????????5083EC2C":
cleanup void StartRoom(int param_1, bool param_2);
// ?Signature length: 20
".803D????????0056":
cleanup void SwitchRoom(int param_1);
// ?Signature length: 8
".83EC54A1????????33":
cleanup void ResetCurrentRoom();
// ?Signature Length: 18
".55":
noHook void FUN_0368c220();
// ?Signature length: 1
".5153":
noHook void FUN_0368c350();
// ?Signature length: 2
".51":
noHook void FUN_0368c550();
// ?Signature length: 1
".51":
noHook void FUN_0368c5e0();
// ?Signature length: 1
".53":
noHook void FUN_0368c750();
// ?Signature length: 1
".53":
noHook void FUN_0368c800();
// ?Signature length: 1
".FF35????????E8":
noHook void FUN_0368c8b0();
// ?Signature length: 7
".558BEC":
noHook void FUN_0368c9d0();
// ?Signature length: 3
".8B4424":
noHook void FUN_0368cbf0();
// ?Signature length: 3
".578B3D":
noHook void FUN_0368cc00();
// ?Signature length: 3
".83EC54":
noHook void FUN_0368cc60();
// ?Signature length: 3
".56":
noHook void FUN_0368d190();
// ?Signature length: 1
".56":
noHook void FUN_0368d1e0();
// ?Signature length: 1
".83EC2C":
cleanup LRESULT WndProc(HWND h_Wnd, uint param2, WPARAM param_3, LPARAM param_4);
// ?Signature length: 3
".FF7424":
noHook void FUN_0368db80();
// ?Signature length: 3
".56":
noHook cleanup void FUN_0368db90();
// ?Signature length: 1
".837C24??00F20F1005":
cleanup void camera_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".F20F1005":
cleanup void camera_create_view(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void camera_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_begin_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".F20F1005":
cleanup void camera_get_default(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void camera_get_end_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".81ECC4000000":
cleanup void camera_get_proj_mat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".837C24??01":
cleanup void camera_get_update_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_border_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_border_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC44":
cleanup void camera_get_view_mat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void camera_get_view_speed_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_speed_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_target(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void camera_get_view_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void camera_set_begin_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".566A00":
cleanup void camera_set_default(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??02":
cleanup void camera_set_end_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC44":
cleanup void camera_set_proj_mat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??02":
cleanup void camera_set_update_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void camera_set_view_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC44":
cleanup void camera_set_view_mat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??03":
cleanup void camera_set_view_pos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??03":
cleanup void camera_set_view_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??03":
cleanup void camera_set_view_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".FF7424??6A00FF7424??E8????????83C40850FF7424??E8????????83C40CC3FF7424??6A00FF7424??E8????????83C40850FF7424??E8????????83C40CC3FF7424??6A00FF7424??E8????????83C40850FF7424??E8????????83C40CC3FF7424":
cleanup void view_get_camera(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 99
".83EC10":
cleanup void view_set_hport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void view_set_surface_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void view_set_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void view_set_wport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void view_set_xport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC10":
cleanup void view_set_yport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5657B9":
static cleanup CLayer * CLayerManager::AddDynamicLayer(CRoom * param_1, int param_2);
// ?Signature length: 3
".807C24??00":
static cleanup void CLayerManager::AddElementToLayer(CRoom * _pRoom, CLayer * _pLayer, CLayerElementBase * _pElement, bool _addToEnd);
// ?Signature length: 5
// !Error: Function name contains invalid characters: AddLast
//! ERROR: AddFirst signature matched 2 locations, which is too many for a unique signature.
".803D????????00":
static cleanup void CLayerManager::AddInstance(CRoom * param_1, CInstance * param_2);
// ?Signature length: 7
".83EC08":
static cleanup void CLayerManager::AddInstanceToLayer(CRoom * param_1, CLayer * param_2, CInstance * param_3);
// ?Signature length: 3
// !Error: Function name contains invalid characters: AddLast
".5356578B7C24":
static cleanup int CLayerManager::AddNewElement(CRoom * _pRoom, CLayer * _pLayer, CLayerElementBase * _pElement, bool _buildRuntimeData);
// ?Signature length: 6
".5356578B7C24":
static cleanup int CLayerManager::AddNewElementAtDepth(CRoom * param_1, int param_2, byte param_3, bool param_4, bool param_5);
// ?Signature length: 6
".538B5C24":
static cleanup void CLayerManager::BuildElementRuntimeData(CRoom * param_1, CLayer * param_2, byte param_3);
// ?Signature length: 4
".558BEC":
static cleanup void CLayerManager::BuildOldTilemapElementRuntimeData(CRoom * param_1, CLayer * param_2, CLayerOldTilemapElement * param_3);
// ?Signature length: 3
".83EC10":
static cleanup void CLayerManager::BuildRoomLayerRuntimeData(CRoom * param_1);
// ?Signature length: 3
".568B7424":
cleanup void COPY_RValue_do__Post_IDK(RValue* param_1, RValue* param_2);
// ?Signature length: 4
".578B7C24??85FF0F84????????807F??00":
static cleanup void CLayerManager::CleanElementRuntimeData(CRoom * param_1, byte param_2);
// ?Signature length: 17
".538B5C24":
cleanup void F_LayerExists(RValue* param_1, CInstance * param_2, CInstance * param_3, int param_4, RValue* param_5);
// ?Signature length: 4
".83EC08":
static cleanup void CLayerManager::CleanRoomLayers(CRoom * param_1);
// ?Signature length: 3
// !Error: Function name contains invalid characters: Delete
//! ERROR: Delete signature matched 2 locations, which is too many for a unique signature.
//! ERROR: Delete signature matched 3 locations, which is too many for a unique signature.
".837C24??05":
cleanup void draw_tile(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??03":
cleanup void draw_tilemap(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void instance_activate_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_add_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??028B4424??F20F1005????????C740??00000000F20F110074??6A0068????????E8????????83C408C3A1????????55":
cleanup void layer_background_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 52
".837C24??01":
cleanup void layer_background_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_background_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_htiled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_stretch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_vtiled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_background_get_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??028B4424??F20F1005????????C740??00000000F20F110074??6A0068????????E8????????83C408C3A1????????5783F8FF75??8B3D????????EB??50E8????????8BF883C40485FF0F443D????????6A00FF7424??E8????????83C40885FF74??568BB7????????85F674??3946??74??894424??8D8F????????8D4424??50E8????????83F8FF74??8D0C??8B87????????8D34??85F674??8B068987????????8B3685F674??833E0175??837E??0074??6A01FF7424??E8????????8B4E??83C4088801":
cleanup void layer_background_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 204
".8B4424??F20F1005????????56":
cleanup void layer_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 13
".837C24??02":
cleanup void layer_depth(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_destroy_instances(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_element_move(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void layer_get_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_all_elements(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_depth(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_element_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_element_type(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void layer_get_forced_depth(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void layer_get_hspeed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01F20F1005":
cleanup void layer_get_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".837C24??01":
cleanup void layer_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01F20F1005????????578B7C24??C747??00000000F20F110774??6A0068????????E8????????83C4085FC3A1????????5683F8FF75??8B35????????EB??50E8????????8BF083C40485F60F4435????????8B4C24??536A00518B41??25FFFFFF0083F80175??E8????????8BD883C40885DB0F84????????85F60F84????????8BB6????????85F60F84????????8B46??85C074??5053E8????????83C40885C074??8B76??85F675??5B5E5FC3E8????????83C40885F674??894424??8D8E????????8D4424??50E8????????83F8FF74??8D0C??8B86????????8D34??85F674??8B3685F674??8B4F??BB0100000083E11F8BC3D3E083C620":
cleanup void layer_get_script_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 257
".8B4424":
cleanup void layer_get_target_room(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void layer_get_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_vspeed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_has_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_hspeed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_instance_get_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void layer_is_draw_depth_forced(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".C705????????FFFFFFFF":
cleanup void layer_reset_target_room(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".55":
cleanup void layer_script_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void layer_script_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??02":
cleanup void layer_sequence_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51":
cleanup void layer_sequence_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??01":
cleanup void layer_sequence_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_headdir(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_headpos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_instance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_sequence(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_speedscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_get_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_headdir(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_headpos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_is_finished(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sequence_is_paused(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??018B4424??F20F1005????????C740??00000000F20F110074??6A0068????????E8????????83C408C3A1????????5683F8FF75??8B35????????EB??50E8????????8BF083C40485F60F4435????????6A00FF7424??E8????????83C40885F674":
cleanup void layer_sequence_pause(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 102
".837C24??02":
cleanup void layer_sequence_speedscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sequence_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00":
cleanup void layer_set_target_room(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".837C24??02":
cleanup void layer_set_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_shader(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_change(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??04":
cleanup void layer_sprite_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_get_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_sprite_get_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_sprite_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_change(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??08":
cleanup void layer_tile_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void layer_tile_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??01":
cleanup void layer_tile_get_alpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_get_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_get_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_get_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01F20F1005????????578B7C24??C747??00000000F20F110774??6A0068????????E8????????83C4085FC30F57C0F20F1107A1????????5683F8FF75??8B35????????EB??50E8????????8BF083C40485F60F4435????????6A00FF7424??E8????????83C40885F674??8B8E????????5385C974??3941??74??894424??8D8E????????8D4424??50E8????????83F8FF74??8D0C??8B86????????8D0C??85C974??8B018986????????8B0985C974??83390775??F30F1041":
cleanup void layer_tile_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 192
".837C24??01":
cleanup void layer_tile_get_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tile_get_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??05":
cleanup void layer_tile_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_xscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tile_yscale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??06":
cleanup void layer_tilemap_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tilemap_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_tilemap_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void layer_tilemap_get_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_vspeed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51837C24??01":
cleanup void sequence_instance_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".837C24??01":
cleanup void tile_set_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tile_set_flip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tile_set_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tile_set_mirror(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tile_set_rotate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??03":
cleanup void tilemap_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void tilemap_get_at_pixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void tilemap_get_cell_x_at_pixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void tilemap_get_cell_y_at_pixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void tilemap_get_frame(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4C24":
cleanup void tilemap_get_global_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void tilemap_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_tile_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_tile_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_tileset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tilemap_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".51837C24??04":
cleanup void tilemap_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".55":
cleanup void tilemap_set_at_pixel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??02":
cleanup void tilemap_set_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_set_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_set_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tile_get_empty(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tile_get_flip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tile_get_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tile_get_mirror(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void tile_get_rotate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_tileset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void tilemap_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
// !Error: Function name contains invalid characters: FindPosition
//! ERROR: FindPosition signature matched 2 locations, which is too many for a unique signature.
//! ERROR: FindPosition signature matched 3 locations, which is too many for a unique signature.
// !Error: Function name contains invalid characters: GetFromPool
//! ERROR: Insert signature matched 2 locations, which is too many for a unique signature.
//! ERROR: Insert signature matched 3 locations, which is too many for a unique signature.
// !Error: Function name contains invalid characters: AddLast
".8B5424??85D274??8B42":
static cleanup void CLayerManager::SortDeactivatedInstances(CLayer * param_1);
// ?Signature length: 10
".A1????????68????????508B08FF51??E8????????A1????????68????????508B08FF51??E8????????A1????????68????????508B08FF51??E8????????A1????????68????????508B08FF51??E8????????A1????????68????????508B08FF51??E8????????A1????????68":
cleanup void build_function_index();
// ?Signature length: 111
".558BEC6AFF68????????64A1????????5056":
cleanup void CreateAsyncEventWithDSMap(int _map, int _event);
// ?Signature length: 18
".55":
cleanup void CreateAsyncEventWithDSMapAndBuffer(int _map, int _buffer, int _event);
// ?Signature length: 1
".83EC2C":
static cleanup void Graphics::SetViewPort();
// ?Signature length: 3
".5657FF7424":
RVariable * CVariableList::Find(CVariableList * this, char * param_1, char * param_2);
// ?Signature length: 5
".568B7424??6A01":
cleanup void clipboard_has_text(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".55":
noHook void FUN_036ae590(uint32_t* param_1);
".FF15????????C3":
noHook void FUN_036ae67e();
".8B4C24":
cleanup void window_device(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4C24":
cleanup void window_handle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC83E4F883EC48":
cleanup void Room_Prepare();
// ?Signature length: 9
".8B0D????????56":
cleanup void TimeLine_Prepare();
// ?Signature length: 7
".558BEC6AFF68????????64A1????????5081EC88000000":
cleanup int Room_Add();
// ?Signature length: 23
".8B4C24":
cleanup CRoom * Room_Data(int RoomID);
// ?Signature length: 3
".55":
cleanup int Room_Duplicate(int param_1);
// ?Signature length: 1
".53":
cleanup int Room_Find(char * param_1);
// ?Signature length: 1
".8B4424":
cleanup void Room_Name();
// ?Signature length: 3
".B001":
cleanup void Room_Prepare_fake();
// ?Signature length: 2
".558BEC51A1????????33C5":
cleanup void ShowMessage(char * msg);
// ?Signature length: 11
".81EC04080000":
cleanup bool BundleFileExists(char * _pszFileName);
// ?Signature length: 6
".558BEC":
cleanup void HTTP_Get(char * _pFilename, int _type, PFUNC_async _async, PFUNC_cleanup _cleanup, void * _pV);
// ?Signature length: 3
".558BEC6AFF68????????64A1????????5051":
cleanup void HTTP_Post(char * _pFilename, char * _pPost, PFUNC_async * _async, PFUNC_cleanup * _cleanup, void * _pV);
// ?Signature length: 18
".558BEC":
cleanup void HTTP_Request(char * _url, char * _method, char * _headers, char * _pBody, PFUNC_async * _async, PFUNC_cleanup * _cleanup, void * _pV, int _contentLength);
// ?Signature length: 3
".81EC04080000A1????????33C4898424????????8B8424????????50":
cleanup bool SaveFileExists(char * _pszFileName);
// ?Signature length: 28
".83EC34A1":
static cleanup void Graphics::Flush();
// ?Signature length: 4
".C20000":
cleanup void FreeAllVertexData();
// ?Signature length: 3
".833D????????000F84????????E8????????8B4424??8B4C24":
static cleanup void Graphics::SetMatrix(int32_t param_1, int32_t param_2);
// ?Signature length: 25
".515355":
static cleanup void Graphics::OpenWindow();
// ?Signature length: 3
".E8????????E8????????B9":
static cleanup void Graphics::Quit();
// ?Signature length: 11
".6A00FF7424":
cleanup void device_mouse_check_button(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00":
cleanup void device_mouse_check_button_pressed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void device_mouse_check_button_released(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void device_mouse_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void device_mouse_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B0D????????85C975":
cleanup void vertex_format_add_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".576A00":
cleanup void vertex_format_add_custom(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B0D":
cleanup void vertex_format_add_normal(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B0D":
cleanup void vertex_format_add_position_3d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B0D":
cleanup void vertex_format_add_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B0D":
cleanup void vertex_format_add_texcoord(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".837C24??00":
cleanup void vertex_format_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".E8????????6A00":
cleanup void vertex_format_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".6A02FF7424":
cleanup void vertex_argb(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void vertex_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void vertex_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void vertex_create_buffer_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??02":
cleanup void vertex_create_buffer_from_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".F20F1005":
cleanup void vertex_create_buffer_from_buffer_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??00":
cleanup void vertex_create_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void vertex_delete_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void vertex_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A02":
cleanup void vertex_float1(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".578B7C24":
cleanup void vertex_float2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void vertex_float3(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void vertex_float4(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void vertex_freeze(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void vertex_get_buffer_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void vertex_get_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".578B7C24":
cleanup void vertex_normal(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void vertex_position_3d(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void vertex_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??03":
cleanup void vertex_submit(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".578B7C24":
cleanup void vertex_texcoord(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void vertex_ubyte4(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B0D????????56":
cleanup void InvalidateFrozenVBs();
// ?Signature length: 7
".536A00FF7424":
cleanup void keyboard_check_direct(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".6A006A00":
cleanup void mouse_check_button(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A006A00":
cleanup void mouse_check_button_pressed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A006A00":
cleanup void mouse_check_button_released(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void keyboard_get_numlock(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A006A006A00":
cleanup void keyboard_key_press(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".6A006A02":
cleanup void keyboard_key_release(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".536A00":
cleanup void keyboard_set_numlock(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00FF7424":
cleanup void gesture_double_tap_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC08":
cleanup void gesture_double_tap_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gesture_drag_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void gesture_drag_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gesture_flick_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void gesture_get_double_tap_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void gesture_get_double_tap_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void gesture_get_drag_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void gesture_get_drag_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void gesture_get_flick_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gesture_get_pinch_angle_away(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gesture_get_pinch_angle_towards(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gesture_get_pinch_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gesture_get_rotate_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void gesture_get_rotate_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void gesture_get_tap_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gesture_pinch_angle_away(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void gesture_pinch_angle_towards(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void gesture_pinch_distance(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void gesture_rotate_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void gesture_rotate_time(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gesture_tap_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424??C740??00000000":
cleanup void InitSLLVM(SLLVMVars * param_1);
// ?Signature length: 11
".81EC64050000":
cleanup void RunnerLoadDataFile();
// ?Signature length: 6
".558BEC":
cleanup void Code_Constant_Prepare();
// ?Signature length: 3
".83EC08803D????????00":
cleanup void application_surface_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".8B4C24":
cleanup void application_surface_is_enabled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC108D0424":
cleanup void application_get_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
//! Warning: 0 matches were not in a function and will be ignored.
".8B4424??0F57C0":
cleanup void extension_stubfunc_real(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".6A00":
cleanup void extension_stubfunc_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void application_surface_draw_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void gml_release_mode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void virtual_key_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00FF7424":
cleanup void virtual_key_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void virtual_key_hide(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00FF7424":
cleanup void virtual_key_show(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC086A00":
cleanup void device_mouse_x_to_gui(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC086A00":
cleanup void device_mouse_y_to_gui(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void switch_mask_profanity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void achievement_event(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void achievement_load_leaderboard(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
//! Warning: 0 matches were not in a function and will be ignored.
".568B7424??6A02":
cleanup void achievement_show_challenge_notifications(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".8B4424":
cleanup void achievement_get_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void achievement_get_pic(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void achievement_login_status(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void achievement_available(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void achievement_show(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
//! Warning: 0 matches were not in a function and will be ignored.
".558BEC":
cleanup void analytics_event_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void base64_decode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void base64_encode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void os_check_permission(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void YoYo_CheckSecurity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC08040000":
cleanup void cloud_file_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".837C24??02":
cleanup void cloud_string_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".56":
cleanup void cloud_synchronise(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void YoYo_GetCPUDetails(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".FF35":
cleanup void os_get_config(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void display_get_dpi_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void display_get_dpi_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void YoYo_GetDevice(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".68":
cleanup void url_get_domain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".660F6E0D????????0F57C0":
cleanup void display_get_gui_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".660F6E0D????????0F57C0":
cleanup void display_get_gui_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".E8????????50":
cleanup void os_get_language(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B4424":
cleanup void YoYo_GetPlatform(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".E8????????50":
cleanup void os_get_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".8B4424":
cleanup void YoYo_GetSessionKey(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void device_get_tilt_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void device_get_tilt_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void device_get_tilt_z(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void get_timer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??02":
cleanup void achievement_increment(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void device_is_keypad_open(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??00":
cleanup void os_is_network_connected(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void shop_leave_rating(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void os_lock_orientation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
//! Warning: 0 matches were not in a function and will be ignored.
".558BEC":
cleanup void md5_string_unicode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC6C":
cleanup void md5_string_utf8(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void device_mouse_raw_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void device_mouse_raw_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".E8????????50":
cleanup void openfeint_accept_challenge(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".6A01":
cleanup void achievement_map_achievement(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".837C24??03":
cleanup void achievement_map_leaderboard(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void openfeint_send_challenge(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void openfeint_send_result(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void openfeint_send_invite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void openfeint_send_social(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void openfeint_set_url(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void window_has_focus(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void os_is_paused(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void url_open_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void url_open_full(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC08080000":
cleanup void os_get_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".837C24??02":
cleanup void achievement_post(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void achievement_post_score(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00":
cleanup void os_powersave_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void os_request_permission(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".81EC70080000":
cleanup void sha1_file(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".55":
cleanup void sha1_string_unicode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC6C":
cleanup void sha1_string_utf8(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void display_set_gui_maximize(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void display_set_gui_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void winphone_license_trial_version(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void winphone_tile_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??01":
cleanup void winphone_tile_title(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".558BEC":
cleanup void winphone_tile_cycle_images(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void winphone_tile_small_background_image(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_back_content(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_back_content_wide(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_back_image(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_back_image_wide(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_back_title(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_front_image(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_front_image_small(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_front_image_wide(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".A1":
cleanup void winphone_tile_background_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??01":
cleanup void winphone_tile_icon_image(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void winphone_tile_small_icon_image(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void winphone_tile_wide_content(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00FF7424??E8????????8B0D????????83C40850E8????????C3":
cleanup void gxc_record_input_playback(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 27
".6A00":
cleanup void gxc_save_input_playback(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC30":
cleanup void matrix_build(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void matrix_build_identity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_build_lookat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_build_projection_ortho(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_build_projection_perspective(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_build_projection_perspective_fov(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void draw_get_lighting(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".55":
cleanup void matrix_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void draw_light_define_direction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC1056":
cleanup void draw_light_define_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".51":
cleanup void draw_light_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void draw_light_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4C24":
cleanup void draw_light_get_ambient(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void draw_light_define_ambient(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void matrix_multiply(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".C705????????00000000":
cleanup void matrix_stack_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".832D????????01":
cleanup void matrix_stack_pop(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".81EC8C000000":
cleanup void matrix_stack_push(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".83EC4C":
cleanup void matrix_stack_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void matrix_stack_top(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_transform_vertex(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void draw_set_lighting(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void matrix_set(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??00":
cleanup void gpu_get_alphatestenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_alphatestref(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_blendenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC08":
cleanup void gpu_get_blendmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??00":
cleanup void gpu_get_blendmode_dest(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_blendmode_destalpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_blendmode_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??000F57C0":
cleanup void gpu_get_blendmode_src(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".837C24??00":
cleanup void gpu_get_blendmode_srcalpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_colorwriteenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_cullmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC106A11":
cleanup void gpu_get_fog(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void gpu_get_state(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??00":
cleanup void gpu_get_tex_filter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_filter_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_max_aniso(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_max_aniso_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_max_mip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_max_mip_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_min_mip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_min_mip_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_mip_bias(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_mip_bias_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_mip_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_mip_enable_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_mip_filter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_mip_filter_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_tex_repeat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_get_tex_repeat_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_zfunc(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_ztestenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??00":
cleanup void gpu_get_zwriteenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_alphatestenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_alphatestref(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_blendenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_blendmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424??F20F1005":
cleanup void gpu_set_blendmode_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".8B4424??F20F1005????????5355C740??00000000F20F11008B4424??565783F80474??83F80174??6A0068????????E8????????83C4085F5E5D5BC38B7424":
cleanup void gpu_set_blendmode_ext_sepalpha(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 64
".837C24??01":
cleanup void gpu_set_cullmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424??F20F1005":
cleanup void gpu_set_fog(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".55":
cleanup void gpu_set_state(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??01":
cleanup void gpu_set_tex_filter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_filter_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_max_aniso(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_max_aniso_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_max_mip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_max_mip_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_min_mip(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_min_mip_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_mip_bias(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_mip_bias_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_mip_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_mip_enable_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_mip_filter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_mip_filter_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_tex_repeat(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void gpu_set_tex_repeat_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_zfunc(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_ztestenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void gpu_set_zwriteenable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424??0F57C0C740??00000000F20F1100E8":
cleanup void draw_texture_flush(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 19
".558BEC6AFF68????????64A1????????5051535657A1????????33C5508D45??64A3????????8B7D":
cleanup void network_connect(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 40
".55":
cleanup void network_connect_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void network_connect_raw_async(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void network_connect_raw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void network_create_server(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void network_create_server_raw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void network_create_socket(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".55":
cleanup void network_create_socket_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void network_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void network_resolve(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC6AFF68????????64A1????????5083EC08":
cleanup void network_send_packet(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 20
".55":
cleanup void network_send_raw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void network_send_udp(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void network_send_udp_raw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC6AFF68????????64A1????????5083EC08":
cleanup void network_set_timeout(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 20
".83EC10":
static cleanup void CEvent::Execute(void * CInst_self, void * CInst_other, CCode * code, RValue* params);
// ?Signature length: 3
".837C24??02":
cleanup void animcurve_channel_evaluate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void animcurve_channel_new(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005????????B9":
cleanup void animcurve_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".837C24??01":
cleanup void animcurve_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void animcurve_get_channel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void animcurve_get_channel_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void animcurve_point_new(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void asset_add_tags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424??0F57C0":
cleanup void asset_clear_tags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".57":
cleanup void asset_get_tags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void asset_has_any_tag(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void asset_has_tags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void asset_remove_tags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void fx_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void fx_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void fx_get_parameter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void fx_get_parameter_names(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void fx_get_parameters(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void fx_set_parameter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??02":
cleanup void fx_set_parameters(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".568B7424":
cleanup void font_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void font_add_enable_aa(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void font_add_get_enable_aa(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5356":
cleanup void font_add_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void font_add_sprite_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void font_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void font_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void font_get_bold(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5633F6":
cleanup void font_get_fontname(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void font_get_italic(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void font_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".516A00":
cleanup void font_get_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void font_replace_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void font_replace_sprite_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void font_set_cache_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void layer_clear_fx(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01":
cleanup void layer_get_fx(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void layer_set_fx(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".56":
cleanup void object_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void object_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void object_event_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".578B7C24":
cleanup void object_event_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void object_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void object_get_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void object_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void object_get_parent(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424??E8":
cleanup void object_get_persistent(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void object_get_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void object_is_ancestor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00FF7424":
cleanup void object_set_persistent(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".6A00":
cleanup void object_set_solid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void object_set_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void object_set_visible(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void path_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void path_add_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void path_append(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void path_assign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void path_change_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".53":
cleanup void path_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_delete_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void path_duplicate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void path_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void path_get_kind(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void path_get_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void path_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void path_get_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_get_point_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_get_point_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_get_point_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void path_get_precision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void path_insert_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void path_rescale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00FF7424??E8????????50E8????????83C40C":
cleanup void path_reverse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 20
".57":
cleanup void path_set_closed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_set_kind(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void path_set_precision(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void path_shift(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".FF7424??6A00":
cleanup void asset_get_index(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".56":
cleanup void asset_get_type(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void room_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void room_assign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void room_duplicate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void room_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void room_get_camera(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void room_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void room_get_viewport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".53":
cleanup void room_instance_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void room_set_background_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".53":
cleanup void room_set_camera(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void room_set_caption(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void room_set_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void room_set_persistent(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void room_set_view_enabled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void room_set_viewport(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void room_set_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC18":
cleanup void script_execute(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".558BEC":
cleanup void script_execute_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void script_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void script_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".837C24??01":
cleanup void sequence_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void sequence_fps(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_fps(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_loopmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_objects(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_get_tracks(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".55":
cleanup void sequence_instance_override_object(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".837C24??02":
cleanup void sequence_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void sequence_loopmode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??02":
cleanup void sequence_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_track_get_animcurves(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??01":
cleanup void sequence_track_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??010F57C056":
cleanup void sequence_track_get_numkeyframes(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 9
".837C24??01":
cleanup void sequence_track_get_type(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".837C24??06":
cleanup void sprite_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".83EC08":
cleanup void sprite_add_from_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5356":
cleanup void sprite_assign(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC18":
cleanup void sprite_collision_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC14":
cleanup void sprite_create_from_surface(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void sprite_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_duplicate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".518B4424":
cleanup void sprite_flush(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424??83EC0C":
cleanup void sprite_flush_multi(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void sprite_get_bbox_bottom(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_bbox_left(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_bbox_mode(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_bbox_right(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_bbox_top(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_height(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void sprite_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".55":
cleanup void sprite_get_nineslice(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void sprite_get_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void sprite_get_speed_type(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void sprite_get_tpe(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void sprite_get_width(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_xoffset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void sprite_get_yoffset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void sprite_merge(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".55":
cleanup void sprite_nineslice_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".518B4424":
cleanup void sprite_prefetch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424??83EC0C":
cleanup void sprite_prefetch_multi(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".5356":
cleanup void sprite_replace(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void sprite_save(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void sprite_set_alpha_from_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC14":
cleanup void sprite_set_bbox(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void sprite_set_cache_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void sprite_set_cache_size_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??02":
cleanup void sprite_set_nineslice(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".5356":
cleanup void sprite_set_offset(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5356":
cleanup void sprite_set_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void tag_get_asset_ids(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void tag_get_assets(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void texture_debug_messages(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void texture_flush(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void texture_is_ready(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void texture_prefetch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".837C24??01F20F1005????????568B7424??C746??00000000F20F110674??6A0068????????E8????????83C4085EC3535733FF57FF7424??E8????????50E8????????8BD883C40C85DB74??8B7B??C746??02000000E8????????89066A01682A0E0000":
cleanup void texturegroup_get_textures(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 101
".56":
cleanup void timeline_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void timeline_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void timeline_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void timeline_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void timeline_max_moment(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void timeline_moment_add(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void timeline_moment_add_script(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void timeline_moment_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void timeline_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1????????85C0":
cleanup void MarkInstancesAsDirty(int param_1);
// ?Signature length: 7
".8B4424??0F57C0":
cleanup void win8_livetile_notification_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".8B4424":
cleanup void uwp_device_touchscreen_available(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
//! Warning: 0 matches were not in a function and will be ignored.
".803D????????0075??568B7424??6A00":
cleanup void audio_create_stream(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 16
".803D????????00":
cleanup void audio_create_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_debug(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_destroy_stream(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_destroy_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_get_listener_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????0075??56":
cleanup void audio_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".803D????????00":
cleanup void audio_emitter_get_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_get_pitch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC0C":
cleanup void audio_emitter_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void audio_emitter_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void audio_emitter_get_z(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void audio_emitter_get_vx(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void audio_emitter_get_vy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC0C":
cleanup void audio_emitter_get_vz(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".803D????????00":
cleanup void audio_get_listener_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_get_data(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_listener_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_listener_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_master_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sound_get_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sound_get_pitch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sound_get_track_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_type(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_is_paused(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_is_playing(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_music_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_music_is_playing(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_pause_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_pause_music(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_pause_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_pause_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_play_in_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_play_music(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_play_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_play_sound_at(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????0075??6A00":
cleanup void audio_emitter_free(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".803D????????00":
cleanup void audio_resume_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_resume_music(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_resume_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_resume_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_falloff(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_pitch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_emitter_velocity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_set_listener_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_orientation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_set_orientation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_set_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_velocity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_listener_set_velocity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_master_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_set_master_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_channel_num(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".51":
cleanup void audio_sound_set_track_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".803D????????00":
cleanup void audio_sound_gain(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sound_get_listener_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".568B7424":
cleanup void audio_sound_is_playable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".803D????????00":
cleanup void audio_sound_length(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sound_pitch(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????0075??6A01":
cleanup void audio_sound_set_listener_mask(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".803D????????00":
cleanup void audio_stop_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_stop_music(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_stop_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_stop_sync_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sync_group_debug(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sync_group_get_track_pos(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_sync_group_is_playing(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_system(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".8B4424":
cleanup void audio_system_is_available(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void audio_create_buffer_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".803D????????00":
cleanup void audio_create_play_queue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_free_buffer_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_free_play_queue(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_recorder_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_get_recorder_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_group_is_loaded(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_group_load_progress(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????0075??6A00":
cleanup void audio_group_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".803D????????00":
cleanup void audio_group_stop_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_group_load(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_queue_sound(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_falloff_set_model(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".803D????????00":
cleanup void audio_start_recording(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void audio_stop_recording(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".803D????????00":
cleanup void audio_group_unload(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".81EC04010000":
cleanup void MCI_command(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".568B7424":
cleanup void effect_create_above(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void effect_create_below(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_emitter_burst(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void part_emitter_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void part_emitter_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void part_emitter_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void part_emitter_destroy_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".57":
cleanup void part_emitter_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void part_emitter_region(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_emitter_stream(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void part_particles_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void part_particles_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void part_particles_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_particles_create_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void part_system_automatic_draw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void part_system_automatic_update(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void part_system_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void part_system_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void part_system_create_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A01":
cleanup void part_system_depth(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void part_system_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void part_system_drawit(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void part_system_draw_order(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void part_system_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void part_system_get_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void part_system_layer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void part_system_position(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void part_system_update(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void part_type_alpha1(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void part_type_alpha2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_alpha3(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void part_type_blend(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void part_type_clear(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A01":
cleanup void part_type_color1(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void part_type_color2(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_color3(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_color_hsv(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_color_mix(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_color_rgb(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void part_type_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void part_type_death(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void part_type_destroy(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void part_type_direction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".56":
cleanup void part_type_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void part_type_gravity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_life(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_orientation(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_scale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A01":
cleanup void part_type_shape(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424":
cleanup void part_type_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_sprite(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".568B7424":
cleanup void part_type_step(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424??56":
cleanup void physics_apply_angular_impulse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 5
".8B4424":
cleanup void physics_apply_force(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_apply_impulse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_apply_local_force(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_apply_local_impulse(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_apply_torque(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void physics_particle_group_begin(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void physics_fixture_bind(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void physics_fixture_bind_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".E8????????8B4C24":
cleanup void physics_fixture_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 8
".81EC08010000":
cleanup void physics_joint_friction_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC14010000":
cleanup void physics_joint_gear_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC08010000":
cleanup void physics_joint_prismatic_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC08010000":
cleanup void physics_joint_pulley_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC0C010000":
cleanup void physics_joint_revolute_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC08010000":
cleanup void physics_joint_rope_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC08010000":
cleanup void physics_joint_weld_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".81EC08010000":
cleanup void physics_joint_wheel_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 6
".55":
cleanup void physics_world_create(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_draw_debug(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_world_draw_debug(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void physics_fixture_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".A1":
cleanup void physics_joint_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_group_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_delete_region_box(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_delete_region_circle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51A1":
cleanup void physics_particle_delete_region_poly(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".A1":
cleanup void physics_particle_draw(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_particle_draw_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void physics_particle_group_end(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC08":
cleanup void physics_fixture_add_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".57":
cleanup void physics_fixture_set_angular_damping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void physics_fixture_set_linear_damping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void physics_fixture_set_awake(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void physics_fixture_set_box_shape(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".57":
cleanup void physics_fixture_set_chain_shape(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_fixture_set_circle_shape(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void physics_fixture_set_collision_group(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_fixture_set_density(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_fixture_set_friction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".6A00":
cleanup void physics_fixture_set_kinematic(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".51":
cleanup void physics_fixture_set_restitution(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void physics_get_density(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_get_friction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void physics_particle_get_group_flags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void physics_get_restitution(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void physics_particle_group_join(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".57":
cleanup void physics_joint_enable_motor(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".53":
cleanup void physics_joint_get_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".568B7424":
cleanup void physics_joint_set_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4C24":
cleanup void physics_particle_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void physics_particle_get_damping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void physics_particle_get_data(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_particle_group_get_data(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_particle_get_data_particle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".F20F1005":
cleanup void physics_particle_get_density(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_get_gravity_scale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".A1":
cleanup void physics_particle_group_add_point(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void physics_particle_group_get_ang_vel(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_angle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_centre_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_centre_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_inertia(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_mass(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".A1":
cleanup void physics_particle_group_box(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_group_circle(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_group_polygon(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".F20F1005":
cleanup void physics_particle_group_get_vel_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_vel_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_x(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_group_get_y(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_get_max_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".F20F1005":
cleanup void physics_particle_get_radius(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".51":
cleanup void physics_particle_set_damping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_particle_set_density(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".51":
cleanup void physics_particle_set_gravity_scale(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1????????85C0":
cleanup void physics_particle_set_max_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".51":
cleanup void physics_particle_set_radius(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1????????85C0":
cleanup void physics_pause_enable(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".F20F1005????????83EC24":
cleanup void physics_remove_fixture(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 11
".8B4424??0F57C0":
cleanup void physics_set_density(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".8B4424??0F57C0":
cleanup void physics_set_friction(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC08":
cleanup void physics_world_gravity(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void physics_mass_properties(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1":
cleanup void physics_particle_set_category_flags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_set_flags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".A1":
cleanup void physics_particle_set_group_flags(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424??0F57C0":
cleanup void physics_set_restitution(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".56":
cleanup void physics_world_update_iterations(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void physics_world_update_speed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC28":
cleanup void physics_test_overlap(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".566A00":
cleanup void gamepad_test_mapping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gamepad_add_hardware_mapping_from_file(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".566A00":
cleanup void gamepad_add_hardware_mapping_from_string(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void gamepad_axis_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void gamepad_axis_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void gamepad_button_check(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void gamepad_button_check_pressed(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".5657":
cleanup void gamepad_button_check_released(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void gamepad_button_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5657":
cleanup void gamepad_button_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".56":
cleanup void gamepad_is_connected(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void gamepad_get_axis_deadzone(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".56":
cleanup void gamepad_get_button_threshold(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".558BEC":
cleanup void gamepad_get_hardware_mappings(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void gamepad_get_description(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".8B4424":
cleanup void gamepad_get_device_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".6A00":
cleanup void gamepad_get_guid(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".6A00":
cleanup void gamepad_get_mapping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".568B7424??0F57C06A00":
cleanup void gamepad_hat_count(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 10
".568B7424":
cleanup void gamepad_hat_value(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".6A00":
cleanup void gamepad_remove_mapping(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".8B4424":
cleanup void gamepad_set_axis_deadzone(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gamepad_set_button_threshold(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void gamepad_set_color(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".53":
cleanup void gamepad_set_option(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".8B4424":
cleanup void gamepad_set_vibration(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void gamepad_is_supported(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".5633F6":
cleanup void steam_available_languages(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5633F6":
cleanup void steam_current_game_language(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".E8????????84C0":
cleanup void steam_ugc_create_item(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".5657":
cleanup void steam_ugc_create_query_all(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".565783CEFF83CFFFE8????????84C074??8B7424??6A03":
cleanup void steam_ugc_create_query_user(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 23
".5657":
cleanup void steam_ugc_create_query_user_ex(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 2
".83EC08":
cleanup void steam_ugc_get_item_install_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_get_item_update_info(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_get_item_update_progress(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_num_subscribed_items(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_get_subscribed_items(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_add_excluded_tag(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_add_required_tag(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_allow_cached_response(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_cloud_filename_filter(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_match_any_tag(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_ranked_by_trend_days(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_return_total_only(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_search_text(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_request_item_details(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_send_query(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_set_item_content(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_set_item_description(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_set_item_preview(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_set_item_title(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_set_item_visibility(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_query_set_return_long_description(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".E8????????84C0":
cleanup void steam_ugc_start_item_update(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC08":
cleanup void steam_ugc_submit_item_update(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_subscribe_item(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_unsubscribe_item(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".568B7424":
cleanup void steam_activate_overlay_browser(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".578B7C24":
cleanup void steam_activate_overlay_user(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 4
".83EC08":
cleanup void steam_clear_achievement(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_create_leaderboard(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_user_owns_dlc(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_download_friends_scores(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_download_scores(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_download_scores_around_user(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_delete(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_exists(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_persisted(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5633F6":
cleanup void steam_file_read(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_size(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_write(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_file_write_file(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_achievement(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_app_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".5633F6":
cleanup void steam_get_persona_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_quota_free(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_quota_total(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_stat_avg_rate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_stat_float(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_get_stat_int(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void steam_get_user_steam_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void steam_get_user_account_id(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void steam_get_user_persona_name(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void steam_user_installed_dlc(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".56":
cleanup void steam_initialised(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 1
".83EC08":
cleanup void steam_is_cloud_enabled_for_account(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_is_cloud_enabled_for_app(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_is_user_logged_on(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_is_screenshot_requested(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_is_overlay_activated(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_is_overlay_enabled(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".E8????????84C0":
cleanup void steam_reset_all_stats(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".E8????????84C0":
cleanup void steam_reset_all_stats_achievements(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 7
".83EC08":
cleanup void steam_send_screenshot(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_set_achievement(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_set_stat_avg_rate(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_set_stat_float(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_set_stat_int(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_stats_ready(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_ugc_download(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_upload_score(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_upload_score_buffer(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_upload_score_buffer_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".83EC08":
cleanup void steam_upload_score_ext(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_cancel_local_notification(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_get_application_badge_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_get_first_local_notification(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_get_next_local_notification(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_local_notification(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".8B4424":
cleanup void push_set_application_badge_number(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 3
".A1????????68????????508B08FF51??83C408C3":
cleanup void iap_purchase_details(RValue* Result, CInstance * Self, CInstance * Other, int ArgumentCount, RValue* Arguments);
// ?Signature length: 20
